{"kind":"FETCH","data":{"headers":{"access-control-allow-credentials":"true","access-control-allow-origin":"http://localhost:3000","connection":"keep-alive","content-length":"16534","content-type":"application/json; charset=utf-8","date":"Tue, 06 May 2025 08:44:40 GMT","etag":"W/\"4096-zqhORAtss1OE6FIvytP7eM731GM\"","keep-alive":"timeout=5","vary":"Origin","x-powered-by":"Express"},"body":"","status":200,"url":"http://localhost:5000/books?_t=1746521076870"},"revalidate":31536000,"tags":[]}